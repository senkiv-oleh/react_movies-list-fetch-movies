{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","value","setSearchTerm","results","setSearchResults","filmNotFound","setNotFound","htmlFor","type","id","placeholder","classNames","onChange","event","preventDefault","target","onClick","fetch","then","response","json","Title","Plot","Poster","ImdbUrl","imdbID","App","state","data","find","item","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a3097e0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [value, setSearchTerm] = useState('');\n  const [results, setSearchResults] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [filmNotFound, setNotFound] = useState(false);\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setSearchTerm(event.target.value);\n    setNotFound(true);\n  };\n\n  const findMovie = () => {\n    const API_URL = `https://www.omdbapi.com/?apikey=1e23943c&t=`;\n\n    const result = () => fetch(`${API_URL}${value}`)\n      .then(response => response.json());\n\n    result().then(movies => setSearchResults({\n      title: movies.Title,\n      description: movies.Plot,\n      imgUrl: movies.Poster,\n      imdbUrl: movies.ImdbUrl,\n      imdbId: movies.imdbID,\n    }));\n\n    if (value === '') {\n      setNotFound(false);\n    }\n\n    setSearchTerm('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(`input`, { 'is-danger': !filmNotFound })}\n              value={value}\n              onChange={handleChange}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            { !filmNotFound && `Can't find a movie with such a title`}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(results);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {results.imdbId ? (<MovieCard {...results} />) : 'Film not found'}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    const { movies } = this.state;\n    const sameFilm = movies.find(item => item.imdbId === movie.imdbId);\n\n    if (!sameFilm && movie.imdbId) {\n      this.setState(prevState => ({\n        movies: [\n          ...prevState.movies,\n          movie,\n        ],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}